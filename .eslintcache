[{"F:\\React\\Project\\todo-app\\src\\index.js":"1","F:\\React\\Project\\todo-app\\src\\App.js":"2","F:\\React\\Project\\todo-app\\src\\reportWebVitals.js":"3","F:\\React\\Project\\todo-app\\src\\assets\\Todo\\Todo.js":"4","F:\\React\\Project\\todo-app\\src\\firebase.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1410,"mtime":1613537414941,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3498,"mtime":1613536695848,"results":"10","hashOfConfig":"7"},{"size":455,"mtime":1613451819058,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"13gv7cv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"F:\\React\\Project\\todo-app\\src\\index.js",[],["24","25"],"F:\\React\\Project\\todo-app\\src\\App.js",[],"F:\\React\\Project\\todo-app\\src\\reportWebVitals.js",[],"F:\\React\\Project\\todo-app\\src\\assets\\Todo\\Todo.js",["26"],"import { List, ListItem, ListItemText, Modal, makeStyles, Button, FormControl, InputLabel, Input } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './Todo.css';\r\nimport db from '../../firebase';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport firebase from \"firebase\";\r\n\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n  }\r\n  \r\n  function getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    cancelIcon: {\r\n        marginBottom: 30,\r\n    }\r\n  }));\r\n \r\nfunction Todo(props) {\r\n\r\n    // console.log(props.timestamp);\r\n    const timestamp = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(props.timestamp);\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const updateTodo = () => {\r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        }, { marge:true })\r\n        setInput('');\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <Modal\r\n        open={open}\r\n        onClose = {e => setOpen(false)}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        >\r\n            <div style={modalStyle} className={classes.paper}>\r\n                <CancelIcon className={classes.cancelIcon} onClick = {e => setOpen(false)} />\r\n                <form>\r\n                    <FormControl>\r\n                        <InputLabel>‚úÖ Update Todo</InputLabel>\r\n                        <Input placeholder={props.todo.todo} value={input} onChange = {e => setInput(e.target.value)}/>\r\n                    </FormControl>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        onClick={updateTodo}\r\n                        disabled={!input}\r\n                        type=\"submit\"\r\n                        startIcon={<SaveIcon />}\r\n                    >\r\n                        Update Todo\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n\r\n        <List className=\"todo__list\">\r\n            <ListItem className=\"todo__item\">\r\n                <ListItemText primary={props.todo.todo} secondary={timestamp} className=\"todo__text\"/>\r\n                <button className=\"edit__btn\" onClick = {e => setOpen(true)}>‚úèÔ∏è Edit</button>\r\n                <button className=\"delete__btn\" onClick={event => db.collection('todos').doc(props.todo.id).delete()}> üóëÔ∏è </button>\r\n            </ListItem>\r\n        </List>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","F:\\React\\Project\\todo-app\\src\\firebase.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":50,"column":11,"nodeType":"33","messageId":"34","endLine":50,"endColumn":21},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'handleOpen' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]